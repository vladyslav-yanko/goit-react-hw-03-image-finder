{"version":3,"sources":["services/ApiPixabay.js","Component/SearchForm/SearchForm.js","Component/Modal/Modal.js","Component/ImageItem/ImageItem.js","Component/ImageGallery/ImageGallery.js","Component/Button/Button.js","App.js","reportWebVitals.js","index.js"],"names":["api","fetchImg","query","page","url","fetch","then","reseponse","ok","json","Promise","reject","Error","SearchForm","state","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","className","this","type","placeholder","autoComplete","autoFocus","onChange","Component","modalRoot","document","querySelector","Modal","handleKeydown","code","onClose","handleBackdrop","target","window","addEventListener","removeEventListener","src","alt","createPortal","onClick","ImageItem","showModal","toggleModal","largeImageURL","ImageGallery","images","map","img","webformatURL","tags","id","Button","scroll","scrollToBottom","Status","App","error","status","handleFormSubmit","newQuery","renderImg","ApiPixabay","response","hits","length","prevState","catch","prevProps","autoClose","message","color","height","width","timeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a231f2f.chunk.js","sourcesContent":["const API_KEY = '23034123-dfb7a22dd10a0f412f945dcd2';\n\nfunction fetchImg(query, page) {\n  const url = `https://pixabay.com/api/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  return fetch(url).then(reseponse => {\n    if (reseponse.ok) {\n      return reseponse.json();\n    }\n    return Promise.reject(new Error(`There is no images for ${query}`));\n  });\n}\nconst api = { fetchImg };\nexport default api;\n// https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nexport default class SearchForm extends Component {\n  state = {\n    query: '',\n  };\n\n  handleChange = e => {\n    this.setState({ query: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.query.trim() === '') {\n      toast('Go clearly!');\n      return;\n    }\n\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Try me!</span>\n          </button>\n          <input\n            placeholder=\"lets search smth....\"\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            value={this.state.query}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeydown);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeydown);\n  }\n  handleKeydown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n  render() {\n    const { src, alt } = this.props;\n    return createPortal(\n      <div onClick={this.handleBackdrop} className=\"Overlay\">\n        <div className=\"Modal\">\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  handleBackdrop: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'Component/Modal/Modal';\n\nexport default class ImageItem extends Component {\n  state = {\n    showModal: false,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const { largeImageURL, src, alt } = this.props;\n    const { showModal } = this.state;\n\n    return (\n      <li className=\"ImageGalleryItem\">\n        <img onClick={this.toggleModal} alt={alt} src={src} className=\"\" />\n        {showModal && (\n          <Modal onClose={this.toggleModal} src={largeImageURL} alt={alt} />\n        )}\n      </li>\n    );\n  }\n}\n\nImageItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ImageItem from 'Component/ImageItem/ImageItem';\n\nexport default function ImageGallery({ images }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(img => (\n        <ImageItem\n          src={img.webformatURL}\n          alt={img.tags}\n          largeImageURL={img.largeImageURL}\n          key={img.id}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { animateScroll as scroll } from 'react-scroll';\n\nexport default class Button extends Component {\n  scroll = () => {\n    this.props.onClick();\n    scroll.scrollToBottom();\n  };\n\n  render() {\n    return (\n      <button onClick={this.scroll} className=\"Button\" type=\"button\">\n        Load more\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport ApiPixabay from 'services/ApiPixabay';\nimport SearchForm from 'Component/SearchForm/SearchForm';\nimport './App.css';\nimport ImageGallery from 'Component/ImageGallery/ImageGallery';\nimport Button from 'Component/Button/Button';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n// import ImageItem from 'Component/ImageItem/ImageItem';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nexport default class App extends Component {\n  state = {\n    query: '',\n    error: null,\n    page: 1,\n    status: 'idle',\n    images: [],\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.query;\n    const nextName = this.state.query;\n\n    if (prevName !== nextName) {\n      this.renderImg();\n    }\n  }\n\n  handleFormSubmit = newQuery => {\n    this.setState({\n      query: newQuery,\n      page: 1,\n      images: [],\n    });\n  };\n\n  renderImg = () => {\n    const { query, page } = this.state;\n    this.setState({\n      status: Status.PENDING,\n    });\n    ApiPixabay.fetchImg(query, page)\n      .then(response => {\n        const responseLength = response.hits.length;\n\n        if (responseLength === 0) {\n          this.setState({\n            error: new Error(`No search results for ${query}`),\n            status: Status.REJECTED,\n          });\n          return;\n        }\n\n        this.setState(prevState => ({\n          images: [...prevState.images, ...response.hits],\n          page: prevState.page + 1,\n          status: Status.RESOLVED,\n        }));\n      })\n\n      .catch(error => this.setState({ error, status: Status.REJECTED }));\n  };\n\n  render() {\n    const { error, status } = this.state;\n\n    return (\n      <div className=\"App\">\n        <SearchForm onSubmit={this.handleFormSubmit}></SearchForm>\n        <ToastContainer autoClose={4000} />\n        {status === Status.IDLE && (\n          <div className=\"imgGreet\">\n            Hello =)\n          </div>\n        )}\n        <ImageGallery images={this.state.images} />\n        {status === Status.REJECTED && (\n          <div className=\"imgGreet\">\n            {error.message}\n            <img\n              src=\"https://cdn.pixabay.com/photo/2016/02/19/10/13/pug-1209129_960_720.jpg\"\n              alt=\"\"\n            />\n          </div>\n        )}\n        {status === Status.PENDING && (\n          <Loader\n            type=\"Puff\"\n            color=\"#3fb566\"\n            height={100}\n            width={200}\n            timeout={3000}\n          />\n        )}\n        {status === Status.RESOLVED && <Button onClick={this.renderImg} />}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}